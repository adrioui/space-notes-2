# Docker Environment Variables Template
# Copy this file to .env for Docker development

# =============================================================================
# REQUIRED ENVIRONMENT VARIABLES FOR DOCKER
# =============================================================================

# Database Configuration
# Option 1: Use local PostgreSQL container (default)
DATABASE_URL=postgresql://postgres:password@db:5432/space_notes

# Option 2: Use Supabase (comment out above and uncomment below)
# DATABASE_URL=postgresql://postgres.[project-ref]:[password]@aws-0-[region].pooler.supabase.com:5432/postgres

# Supabase Configuration (Required)
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# NextAuth Configuration (Required)
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=your-development-secret-key-minimum-32-characters

# =============================================================================
# OPTIONAL ENVIRONMENT VARIABLES
# =============================================================================

# Email Configuration (Optional - for email notifications)
EMAIL_FROM=noreply@localhost
EMAIL_SERVER_HOST=smtp.gmail.com
EMAIL_SERVER_PORT=587
EMAIL_SERVER_USER=your-email@gmail.com
EMAIL_SERVER_PASSWORD=your-app-password

# Twilio Configuration (Optional - for SMS notifications)
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=your-twilio-phone-number

# =============================================================================
# DOCKER-SPECIFIC CONFIGURATION
# =============================================================================

# Application Configuration
NODE_ENV=development
NEXT_TELEMETRY_DISABLED=1
PORT=3000
HOSTNAME=0.0.0.0

# Database Configuration (for local PostgreSQL container)
POSTGRES_DB=space_notes
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password

# Redis Configuration (if using Redis container)
REDIS_URL=redis://redis:6379

# =============================================================================
# DEVELOPMENT OVERRIDES
# =============================================================================

# Disable strict SSL for development
NODE_TLS_REJECT_UNAUTHORIZED=0

# Enable debug logging
DEBUG=space-notes:*

# =============================================================================
# PRODUCTION OVERRIDES (for docker-compose.prod.yml)
# =============================================================================

# Uncomment these for production deployment
# NODE_ENV=production
# NEXTAUTH_URL=https://your-production-domain.com
# DATABASE_URL=your-production-database-url

# =============================================================================
# INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env:
#    cp .env.docker.example .env

# 2. Update the Supabase configuration with your actual values:
#    - Get these from your Supabase project settings
#    - Project URL: https://app.supabase.com/project/[project-id]/settings/api
#    - API Keys: https://app.supabase.com/project/[project-id]/settings/api

# 3. Generate a secure NextAuth secret:
#    openssl rand -base64 32

# 4. Choose your database option:
#    - Local: Use the default DATABASE_URL (PostgreSQL container)
#    - Supabase: Update DATABASE_URL with your Supabase connection string

# 5. Start the application:
#    docker-compose up

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# If you encounter database connection issues:
# - Ensure the database service is running: docker-compose ps
# - Check database logs: docker-compose logs db
# - Verify the DATABASE_URL format

# If you encounter permission issues:
# - On Linux/macOS: sudo chown -R $USER:$USER .
# - Ensure Docker has proper permissions

# If you encounter port conflicts:
# - Change the port mapping in docker-compose.yml
# - Or stop the conflicting service: sudo lsof -i :3000
